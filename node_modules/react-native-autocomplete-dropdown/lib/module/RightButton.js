import React, { memo, useEffect, useRef } from 'react';
import { ActivityIndicator, Animated, Easing, StyleSheet, TouchableOpacity, View } from 'react-native';
import { ChevronDown, XCircle } from 'react-native-feather';
export const RightButton = /*#__PURE__*/memo(({
  inputHeight,
  onClearPress,
  onChevronPress,
  isOpened,
  showChevron,
  showClear,
  loading,
  buttonsContainerStyle,
  ChevronIconComponent,
  ClearIconComponent,
  RightIconComponent,
  onRightIconComponentPress
}) => {
  const isOpenedAnimationValue = useRef(new Animated.Value(0)).current;
  useEffect(() => {
    Animated.timing(isOpenedAnimationValue, {
      duration: 350,
      toValue: isOpened ? 1 : 0,
      useNativeDriver: true,
      easing: Easing.bezier(0.3, 0.58, 0.25, 0.99)
    }).start();
  }, [isOpened, isOpenedAnimationValue]);
  const chevronSpin = isOpenedAnimationValue.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '180deg']
  });
  return /*#__PURE__*/React.createElement(View, {
    style: {
      ...styles.container,
      height: inputHeight,
      ...buttonsContainerStyle
    }
  }, !loading && showClear && /*#__PURE__*/React.createElement(TouchableOpacity, {
    onPress: onClearPress,
    style: styles.clearButton
  }, ClearIconComponent ?? /*#__PURE__*/React.createElement(XCircle, {
    width: 18,
    stroke: "#aeb4c6"
  })), loading && /*#__PURE__*/React.createElement(ActivityIndicator, {
    color: "#999"
  }), RightIconComponent && /*#__PURE__*/React.createElement(TouchableOpacity, {
    onPress: onRightIconComponentPress,
    style: styles.chevronButton
  }, RightIconComponent), showChevron && /*#__PURE__*/React.createElement(Animated.View, {
    style: {
      transform: [{
        rotate: chevronSpin
      }]
    }
  }, /*#__PURE__*/React.createElement(TouchableOpacity, {
    onPress: onChevronPress,
    style: styles.chevronButton
  }, ChevronIconComponent ?? /*#__PURE__*/React.createElement(ChevronDown, {
    width: 20,
    stroke: "#727992"
  }))));
});
const styles = StyleSheet.create({
  container: {
    position: 'relative',
    flex: 0,
    flexDirection: 'row',
    right: 8,
    zIndex: 10,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },
  clearButton: {
    width: 26,
    alignItems: 'center'
  },
  chevronButton: {
    width: 26,
    alignItems: 'center',
    height: '100%',
    justifyContent: 'center'
  }
});
//# sourceMappingURL=RightButton.js.map